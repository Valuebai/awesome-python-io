#!/usr/bin/env python
# -*- coding: UTF-8 -*-
'''=================================================
@IDE    ：PyCharm
@Author ：LuckyHuibo
@Date   ：2019/6/17 18:04
@Desc   ：
编写一个程序，找出第 n 个丑数。

丑数就是只包含质因数 2, 3, 5 的正整数。

示例:

输入: n = 10
输出: 12
解释: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 是前 10 个丑数。
说明:  

1 是丑数。
n 不超过1690。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ugly-number-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

==================================================
【笔记】三指针法。一部分是丑数数组，另一部分是权重2，3，5。下一个丑数，定义为丑数数组中的数乘以权重，所得的最小值。

那么，2该乘以谁？3该乘以谁？5该乘以谁？

其一，使用三个指针idx[3]，告诉它们。比如，2应该乘以ugly[idx[0]]，即数组中的第idx[0]个值。（权重2，3，5分别对应指针，idx[0],idx[1],idx[2]）

其二，当命中下一个丑数时，说明该指针指向的丑数 乘以对应权重所得积最小。此时，指针应该指向下一个丑数。（idx[]中保存的是丑数数组下标）

其三，要使用三个并列的if让指针指向一个更大的数，不能用if-else。因为有这种情况：

丑数6，可能由于丑数2乘以权重3产生；也可能由于丑数3乘以权重2产生。

丑数10，... 等等。

=================================================='''


class Solution:
    # 表示传入的参数为n，且必须是int类型，nthUglyNumber函数返回的参数为int类型
    def nthUglyNumber(self, n: int) -> int:
        res = [1]
        idx2 = 0
        idx3 = 0
        idx5 = 0
        for i in range(n - 1):
            res.append(min(res[idx2] * 2, res[idx3] * 3, res[idx5] * 5))
            if res[-1] == res[idx2] * 2:
                idx2 += 1
            if res[-1] == res[idx3] * 3:
                idx3 += 1
            if res[-1] == res[idx5] * 5:
                idx5 += 1
        return res[-1]
